#BlueJ class context
comment0.target=LEGListaConPI
comment0.text=\ Implementa\ la\ interfaz\ ListaConPI\ mediante\ una\ LEG...\r\n\ \ (a)\ Con\ Nodo\ ficticio\ cabecera\ \r\n\ \ (b)\ Una\ referencia\ al\ primer\ Nodo\ \ \r\n\ \ (c)\ Una\ referencia\ al\ ultimo\ Nodo\r\n\ \ (d)\ Para\ representar\ el\ Punto\ de\ Interes,\ una\ referencia\ \r\n\ \ \ \ \ \ al\ Nodo\ anterior\ al\ que\ ocupa\ el\ punto\ de\ interes\r\n\ \ (e)\ Un\ int\ talla\ que\ representa\ la\ talla\ de\ la\ LEG\r\n\r\n\ \ @version\ Febrero\ 2019\r\n\ \ @param\ <E>\ tipo\ de\ datos\ de\ la\ estructura\r\n
comment1.params=
comment1.target=LEGListaConPI()
comment1.text=Crea\ una\ ListaConPI\ vacia
comment10.params=
comment10.target=int\ talla()
comment10.text=\ Devuelve\ la\ talla\ de\ una\ ListaConPI\r\n\ \r\n\ \ @return\ int,\ el\ numero\ de\ Elementos\ de\ la\ Lista\r\n
comment11.params=
comment11.target=java.lang.String\ toString()
comment11.text=\ Devuelve\ el\ String\ con\ los\ Elementos\ de\ una\ ListaConPI\ \r\n\ \ en\ orden\ de\ insercion\r\n\ \ \r\n\ \ @return\ String\ que\ contiene\ los\ Elementos\ de\ la\ Lista,\ \ \r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ en\ el\ formato\ del\ estandar\ de\ Java\r\n
comment2.params=e
comment2.target=void\ insertar(java.lang.Object)
comment2.text=\ Inserta\ e\ en\ una\ ListaConPI\ antes\ del\ Elemento\ \ \r\n\ \ que\ ocupa\ su\ PI,\ que\ permanece\ INalterado\r\n\ \ \r\n\ \ @param\ e\ un\ Elemento\ de\ tipo\ generico\ E\r\n
comment3.params=
comment3.target=void\ eliminar()
comment3.text=\ SII\ \!esFin()\:\ \r\n\ \ Elimina\ de\ una\ ListaConPI\ el\ Elemento\ \ \r\nque\ ocupa\ su\ PI,\ que\ permanece\ INalterado
comment4.params=
comment4.target=void\ inicio()
comment4.text=\ Situa\ el\ PI\ de\ una\ Lista\ en\ su\ inicio,\ \ \ \r\nsobre\ su\ primer\ Elemento\ si\ no\ esta\ vacia
comment5.params=
comment5.target=void\ siguiente()
comment5.text=\ SII\ \!esFin()\:\ \r\nSitua\ sobre\ el\ siguiente\ Elemento\ el\ PI\ de\ una\ Lista
comment6.params=
comment6.target=void\ fin()
comment6.text=\ Situa\ el\ PI\ de\ una\ Lista\ en\ su\ fin,\ detras\ de\ su\ ultimo\ \r\nElemento\ si\ no\ esta\ vacia
comment7.params=
comment7.target=java.lang.Object\ recuperar()
comment7.text=\ SII\ \!esFin()\:\ \r\n\ \ Devuelve\ el\ Elemento\ que\ ocupa\ el\ PI\ de\ una\ Lista\r\n\ \ \r\n\ \ @return\ E,\ el\ Elemento\ que\ ocupa\ el\ PI\ de\ una\ Lista\r\n
comment8.params=
comment8.target=boolean\ esFin()
comment8.text=\ Comprueba\ si\ el\ PI\ de\ una\ Lista\ esta\ en\ su\ fin\r\n\ \r\n\ \ @return\ true\ si\ el\ PI\ de\ la\ Lista\ esta\ en\ su\ fin\ \r\n\ \ \ \ \ \ \ \ \ \ y\ false\ en\ caso\ contrario\r\n
comment9.params=
comment9.target=boolean\ esVacia()
comment9.text=\ Comprueba\ si\ una\ ListaConPI\ esta\ vacia\r\n\ \r\n\ \ @return\ true\ si\ la\ ListaConPI\ esta\ vacia\ \r\n\ \ \ \ \ \ \ \ \ \ y\ false\ en\ caso\ contrario\r\n
numComments=12
